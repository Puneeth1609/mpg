# -*- coding: utf-8 -*-
"""MPG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GhsulQg2ciIiRU08USkrF8TgSzZ80wJV

Car MPG Prediction Using Machine Learning

Objective:
To predict the miles per gallon (MPG) of cars based on various features such as displacement, horsepower, weight, acceleration, model year, and origin.

Data Source:
The dataset used for this project is sourced from the YBI Foundation Dataset Repository.

Import Library
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

import seaborn as sns

"""Import Data"""

df = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/MPG.csv')

df.head()

df.nunique()

"""Data Preprocessing"""

df.info()

df.describe()

"""Remove Missing Values"""

df = df.dropna()

df.info()

"""Data Visualization"""

sns.pairplot(df,x_vars= ['displacement','horsepower','weight','acceleration','mpg'],y_vars=['mpg']);

sns.regplot(x = "displacement", y = "mpg", data = df);

"""Define Target Variable Y and Feature X"""

df.columns

y = df['mpg']

y.shape

x = df[['displacement','horsepower','weight','acceleration']]

x.shape

x

"""Scaling Data"""

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()

x = ss.fit_transform(x)

x

pd.DataFrame(x).describe()

"""Train Test Split Data"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, train_size = 0.7, random_state = 2529)

x_train.shape, x_test.shape, y_train.shape, y_test.shape

"""Linear Regression Model"""

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(x_train, y_train)

lr.intercept_

lr.coef_

"""Predict Test Data"""

y_pred = lr.predict(x_test)

y_pred

"""Model Accuracy"""

from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score

mean_absolute_error(y_test,y_pred)

mean_absolute_percentage_error(y_test,y_pred)

r2_score(y_test,y_pred)

"""Polynomial Regression"""

from sklearn.preprocessing import PolynomialFeatures

poly = PolynomialFeatures(degree=2,interaction_only=True,include_bias=False)

x_train2 = poly.fit_transform(x_test)

x_test2 = poly.fit_transform(x_train)

lr.intercept_

lr.coef_

"""Model Accuracy"""

from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score

# Import the necessary libraries
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression

# Create a polynomial features object
poly_features = PolynomialFeatures(degree=2)

# Transform the input features
X_poly = poly_features.fit_transform(x_train)

# Train a linear regression model
lr = LinearRegression()
lr.fit(X_poly, y_train)

# Predict the output for the test data
y_pred_poly = lr.predict(poly_features.transform(x_test))

# Calculate the mean absolute error
mean_absolute_error(y_test, y_pred_poly)

mean_absolute_percentage_error(y_test, y_pred_poly)

r2_score(y_test, y_pred_poly)

"""Explanation:
This project aims to predict the fuel efficiency of cars (measured in miles per gallon) based on several features. The dataset was first cleaned and preprocessed, handling missing values and encoding categorical variables. We visualized the data to understand relationships between features. A Linear Regression model was then trained on the dataset and evaluated using Mean Squared Error and R-squared metrics. Finally, the model was used to make predictions on unseen data. This project demonstrates the application of basic machine learning techniques to a regression problem using Python.
"""